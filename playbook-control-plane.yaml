---
# First, let's make sure the hosts are properly named
- name: Setup K3S Control Plane nodes
  hosts: control
  become: yes
  become_method: sudo
  gather_facts: yes
  tasks:
  - name: set hostname
    hostname:
      name: "{{ new_hostname }}"

# We then install the first control plane node, because it'll create a token that we will reuse  
- name: Setup K3S Control Plane nodes
  hosts: master
  become: yes
  become_method: sudo
  gather_facts: yes
  tasks:
  - name: install K3s master server
    shell: curl -sfL https://get.k3s.io | sh -s - server --datastore-endpoint="mysql://{{ k3s_username }}:{{ k3s_passwd }}@tcp({{ nginx_ip }}:33306)/{{ k3s_database_name }}" --node-taint CriticalAddonsOnly=true:NoExecute  --tls-san {{ nginx_ip }}
  - name: copy master token
    ansible.builtin.fetch:      
      src: /var/lib/rancher/k3s/server/node-token
      dest: files/node-token
      flat: yes

# And now, we install the two other servers
- name: Setup K3S Control Plane nodes
  hosts: slave
  vars:
    token: "{{ lookup('file','files/node-token') }}"
  become: yes
  become_method: sudo
  gather_facts: yes
  tasks:
  - name: Install K3s slave servers
    shell: curl -sfL https://get.k3s.io | sh -s - server --datastore-endpoint="mysql://{{ k3s_username }}:{{ k3s_passwd }}@tcp({{ nginx_ip }}:33306)/{{ k3s_database_name }}" --token={{ token }} --node-taint CriticalAddonsOnly=true:NoExecute  --tls-san {{ nginx_ip }}
  handlers:
  - name: Restart slaves
    service:
      name: k3s
      state: restarted

- name: Set kubeconfig right
  hosts: control
  become: yes
  become_method: sudo
  gather_facts: no
  tasks:
  - name: change k3s.yaml to point to the haproxy
    lineinfile:
      path: /etc/rancher/k3s/k3s.yaml
      regexp: '^    server: https'
      line: '    server: https://{{ nginx_ip }}:6443'
      backup: yes

- name: Download kubeconfig
  hosts: master
  become: yes
  become_method: sudo
  tasks:
  - name: copy kubeconfig
    ansible.builtin.fetch:      
      src: /etc/rancher/k3s/k3s.yaml
      dest: files/kubeconfig-k3s
      flat: yes